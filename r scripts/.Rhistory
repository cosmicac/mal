qqnorm(y=type1.data, main = "Normal Q-Q Plot with Type 1 data")
qqnorm(y=type2.data, main = "Normal Q-Q Plot with Type 2 data")
qqnorm(y=type1.data, main = "Normal Q-Q Plot with Type 1 data")
qqnorm(y=type2.data, main = "Normal Q-Q Plot with Type 2 data")
qqnorm(diff, main = "Normal Q-Q Plot with differences")
plot(control.data, diff)
plot(control.data, diff, main = "Control Fault Rates vs. Test Fault Rates")
dataf <- (x, y)
dataf <- data.frame(x, y)
x <- c(.34, 1.38, -.65, .68, 1.40, -.88, -0.30, -1.18, .50, -1.75)
y <- c(.27, 1.34, -5.3, .35, 1.28, -.98, -.72, -.81, .64, -1.59)
dataf <- data.frame(x, y)
reg <- lm(y ~ x, data = data.frame)
reg <- lm(y ~ x, data = datafs)
reg <- lm(y ~ x, data = dataf)
summary(reg)
plot(x, y)
?abline
abline(reg)
xy.reg <- lm(x ~ y, data = dataf)
abline(xy.reg)
abline(yx.reg)
yx.reg <- lm(y ~ x, data = dataf)
xy.reg <- lm(x ~ y, data = dataf)
plot(x, y)
abline(yx.reg)
abline(xy.reg)
?om
?lm
?lm
abline(yx.reg)
abline(xy.reg)
yx.reg <- lm(y ~ x, data = dataf)
xy.reg <- lm(x ~ y, data = dataf)
plot(x, y)
abline(yx.reg)
abline(xy.reg)
plot(x, y, main = "Regression of Y on X and X on Y")
yx.reg <- lm(y ~ x, data = dataf)
xy.reg <- lm(x ~ y, data = dataf)
plot(x, y, main = "Regression of Y on X and X on Y")
abline(yx.reg)
abline(xy.reg)
krus.wallis <- kruskal.test(cycles ~ types, data = stopwatches)
type1 <- c(1.7, 1.9, 6.1, 12.5, 16.5, 25.1, 30.5, 42.1, 82.5)
type2 <- c(13.6, 19.8, 25.2, 46.2, 46.2, 61.1)
type3 <- c(13.4, 20.9, 25.1, 29.7, 46.9)
cycles <- c(type1, type2, type3)
types <- c(rep("Type 1", 9), rep("Type 2", 6), rep("Type 3", 5))
stopwatches <- data.frame(types, cycles)
class(stopwatches$types)
class(stopwatches$cycles)
krus.wallis <- kruskal.test(cycles ~ types, data = stopwatches)
summary(krus.wallis)
kruskal.test(cycles ~ types, data = stopwatches)
?abline
?abline
abline(yx.reg, col = "red")
abline(xy.reg, col = "green")
abline(xy.reg, col = "purple")
?legend
?legend
legend(x = 1.0, y = -4, legend = c("Y on X", "X on Y"), fill = c("red", "purple"))
library(ggplot2)
?repr
?rep
days -> c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
days <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
days <- rep(days, each = 5)
days
users <- rep(c("A", "B", "C", "D", "E"), times = 5)
activity <- c(3, 7, 13, 15.5, 1,
10, 5, 17, 4, 12,
21, 4.5, 1, 4.5, 2,
2, 0.5, 20.5, 14, 16,
6, 2, 5, 4.5, 6)
user.activities.df <- data.frame(days, users, activity)
ggplot(df.user.activities, aes(x = days))
+ geom_bar(aes(weight=activity, fill = users), position = 'fill')
library(ggplot2)
days <- rep(c("M", "T", "W", "Th", "F"), each = 5)
users <- rep(c("A", "B", "C", "D", "E"), times = 5)
activity <- c(3, 7, 13, 15.5, 1,
10, 5, 17, 4, 12,
21, 4.5, 1, 4.5, 2,
2, 0.5, 20.5, 14, 16,
6, 2, 5, 4.5, 6)
user.activities.df <- data.frame(days, users, activity)
ggplot(df.user.activities, aes(x = days))
+ geom_bar(aes(weight=activity, fill = users), position = 'fill')
ggplot(user.activities.df , aes(x = days))
+ geom_bar(aes(weight=activity, fill = users), position = 'fill')
user.activities.df <- data.frame(days, users, activity)
ggplot(user.activities.df , aes(x = days))
+ geom_bar(aes(weight=activity, fill = users), position = 'fill')
ggplot(user.activities.df , aes(x = days, y = activity, fill = users)) + geom_bar()
ggplot(data = user.activities.df , aes(x = days, y = activity, fill = users)) + geom_bar()
user.activities.df
View(user.activities.df)
ggplot(data = user.activities.df , aes(x = days, y = activity, fill = users)) + geom_bar()
?geom_bar
ggplot(data = user.activities.df , stat = "identity", aes(x = days, y = activity, fill = users)) + geom_bar()
?geom_bar
ggplot(data = user.activities.df, aes(x = days))
?geom_bar
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users), position = "fill")
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
ggplot(data = user.activities.df, aes(x = c("M", "T", "W", "Th", "F"))) + geom_bar(aes(weight = activity, fill = users))
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
levels(user.activities.df$days)
?data.frame
user.activities.df$days
library(ggplot2)
days <- rep(c("M", "T", "W", "Th", "F"), each = 5)
users <- rep(c("A", "B", "C", "D", "E"), times = 5)
activity <- c(3, 7, 13, 15.5, 1,
10, 5, 17, 4, 12,
21, 4.5, 1, 4.5, 2,
2, 0.5, 20.5, 14, 16,
6, 2, 5, 4.5, 6)
user.activities.df <- data.frame(days, users, activity)
levels(user.activities.df$days) <- c("M", "T", "W", "Th", "F")
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
library(ggplot2)
days <- factor((rep(c("M", "T", "W", "Th", "F"), each = 5)), levels = c("M", "T", "W", "Th", "F"))
users <- rep(c("A", "B", "C", "D", "E"), times = 5)
activity <- c(3, 7, 13, 15.5, 1,
10, 5, 17, 4, 12,
21, 4.5, 1, 4.5, 2,
2, 0.5, 20.5, 14, 16,
6, 2, 5, 4.5, 6)
user.activities.df <- data.frame(days, users, activity)
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
days <- factor((rep(c("M", "T", "W", "Th", "F"), each = 5)), levels = c("M", "T", "W", "Th", "F"))
users <- rep(c("A", "B", "C", "D", "E"), times = 5)
activity <- c(3, 7, 13, 15.5, 1,
10, 5, 17, 4, 12,
21, 4.5, 1, 4.5, 2,
2, 0.5, 20.5, 14, 16,
6, 2, 5, 4.5, 6)
user.activities.df <- data.frame(days, users, activity)
ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
?geom_bar
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days)) + geom_bar(aes(weight = activity, fill = users))
days <- factor((rep(c("M", "T", "W", "Th", "F"), each = 5)), levels = c("M", "T", "W", "Th", "F"))
users <- rep(c("A", "B", "C", "D", "E"), times = 5)
activity <- c(3, 7, 13, 15.5, 1,
10, 5, 17, 4, 12,
21, 4.5, 1, 4.5, 2,
2, 0.5, 20.5, 14, 16,
6, 2, 5, 4.5, 6)
user.activities.df <- data.frame(days, users, activity)
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))
+ geom_bar(aes(weight = activity, fill = users))
+ ylab("activity units")
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))
+ geom_bar(aes(weight = activity, fill = users))
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))  +
geom_bar(aes(weight = activity, fill = users)) +
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))  +
geom_bar(aes(weight = activity, fill = users)) +
ylab("activity units") +
ggtitle("user activity")
user.activities.df <- data.frame(days, users, activity)
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))  +
geom_bar(aes(weight = activity, fill = users)) +
ylab("activity units") +
ggtitle("user activity")
user.activities.barplot
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))  +
geom_bar(aes(weight = activity, fill = users)) +
scale_y_continuous(breaks = seq(0, 60, 10)) +
ylab("activity units") +
ggtitle("user activity")
user.activities.barplot
?scale_y_continuous
user.activities.barplot <- ggplot(data = user.activities.df, aes(x = days))  +
geom_bar(aes(weight = activity, fill = users)) +
scale_y_continuous(limits = c(0,60), breaks = seq(0, 60, 10)) +
ylab("activity units") +
ggtitle("user activity")
user.activities.barplot
xml <- xmlTreeParse('cosmicac_list.xml', options = NOCDATA)
list <- xmlToList(xml)
xml.anime.list <- lapply(lapply(list[-1], lapply, function(x) ifelse(is.null(x), NA, x)), unlist)
library('plyr')
library('XML')
library('ggplot2')
xml <- xmlTreeParse('cosmicac_list.xml', options = NOCDATA)
setwd('C:\Users\weird_000\mal')
setwd('C:/Users/weird_000/mal')
xml <- xmlTreeParse('cosmicac_list.xml', options = NOCDATA)
list <- xmlToList(xml)
xml.anime.list <- lapply(lapply(list[-1], lapply, function(x) ifelse(is.null(x), NA, x)), unlist)
names(xml.anime.list[[1]])
xml.anime.list[[1]]
df <- as.data.frame(xml.anime.list, stringsAsFactors = FALSE)
View(df)
df <- t(df)
View(df)
df <- df(t(df))
df <- data.frame(t(df))
View(f)
View(df)
?apply
?lapply
scores <- vapply(xml.anime.list, function(x) x$my_score)
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric(length(xml.anime.list)))
xml.anime.list[[1]]$my_score
xml.anime.list[1]$my_score
xml.anime.list <- lapply(list[-1], lapply, function(x) ifelse(is.null(x), NA, x)))
xml.anime.list <- lapply(list[-1], lapply, function(x) ifelse(is.null(x), NA, x))
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric(length(xml.anime.list)))
?numeric
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric)
?lapply
scores <- sapply(xml.anime.list, function(x) x$my_score)
scores
scores <- apply(xml.anime.list, function(x) x$my_score)
?apply
?sapply
xml.anime.list[[1]]$my_score
scores <- lapply(xml.anime.list, function(x) x$my_score)
?as.numeric
scores <- as.numeric(lapply(xml.anime.list, function(x) x$my_score))
titles <- lapply(xml.anime.list, function(x), x$series_title)
titles <- lapply(xml.anime.list, function(x) x$series_title)
?as
scores <- as.numeric(lapply(xml.anime.list, function(x) x$my_score))
titles <- as.character(lapply(xml.anime.list, function(x) x$series_title))
?lapply
scores <- as.numeric(sapply(xml.anime.list, function(x) x$my_score))
scores <- sapply(xml.anime.list, function(x) x$my_score)
scores <- vapply(xml.anime.list, function(x) x$my_score)
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric)
?numeric
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric(length(xml.anime.list)))
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric(1))
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = numeric(1))
scores <- vapply(xml.anime.list, function(x) x$my_score, FUN.VALUE = as.numeric(1))
scores <- as.numeric(lapply(xml.anime.list, function(x) x$my_score))
scores <- as.numeric(lapply(list, function(x) x$my_score))
scores <- as.numeric(lapply(list[-1], function(x) x$my_score))
tags <- as.character(lapply(list[-1], function(x) x$my_tags))
df <- data.frame(scores, titles, tags)
View(df)
anime.list <- list[-1]
xml <- xmlTreeParse('cosmicac_list.xml', options = NOCDATA)
list <- xmlToList(xml)
anime.list <- list[-1]
return(list(scores, titles, type, epi.num, status, tags))
extract.vectors <- function(anime.list) {
scores <- as.numeric(lapply(anime.list, function(x) x$my_score))
titles <- as.character(lapply(anime.list, function(x) x$series_title))
type <- as.character(lapply(anime.list, function(x) x$series_type))
epi.num <- as.numeric(lapply(anime.list, function(x) x$series_episodes))
status <- as.character(lapply(anime.list, function(x) x$my_status))
tags <- as.character(lapply(anime.list, function(x) x$my_tags))
return(list(scores, titles, type, epi.num, status, tags))
}
df <- data.frame(extract.vectors(anime.list))
View(df)
colnames(df)
names(df)
df
names(df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
View(df)
library('plyr')
library('XML')
library('ggplot2')
setwd('C:/Users/weird_000/mal')
xml <- xmlTreeParse('cosmicac_list.xml', options = NOCDATA)
list <- xmlToList(xml)
anime.list <- list[-1]
extract.vectors <- function(anime.list) {
scores <- as.numeric(lapply(anime.list, function(x) x$my_score))
titles <- as.character(lapply(anime.list, function(x) x$series_title))
type <- as.character(lapply(anime.list, function(x) x$series_type))
epi.num <- as.numeric(lapply(anime.list, function(x) x$series_episodes))
status <- as.character(lapply(anime.list, function(x) x$my_status))
tags <- as.character(lapply(anime.list, function(x) x$my_tags))
return(list(scores, titles, type, epi.num, status, tags))
}
anime.df <- data.frame(extract.vectors(anime.list))
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
View(anime.df)
scores <- ggplot(data = anime.df, aes(x = anime.df$scores))
scores
scores <- ggplot(data = anime.df, aes(x = anime.df$scores)) + geom_histogram()
scores
?geom_histogram
scores <- ggplot(data = anime.df, aes(x = anime.df$scores)) + geom_histogram(binwidth = 1)
scores
scores <- ggplot(data = anime.df['status' = 'Completed',], aes(x = anime.df$scores)) + geom_histogram(binwidth = 1)
completed.df <- anime.df['status' = 'Completed',]
+ geom_histogram(binwidth = 1)
scores <- ggplot(data = anime.df['status' = 'Completed',], aes(x = anime.df$scores)) +
geom_histogram(binwidth = 1)
completed.df <- anime.df[anime.df$status' = 'Completed',]
completed.df <- anime.df[anime.df$status' == 'Completed',]
completed.df <- anime.df[anime.df$status == 'Completed',]
scores <- ggplot(data = anime.df[anime.df$status == 'Completed',], aes(x = anime.df$scores)) +
geom_histogram(binwidth = 1)
scores
View(anime.df)
completed.df <- anime.df[anime.df$status == 'Completed',]
scores <- ggplot(data = completed.df, aes(x = anime.df$scores)) +
geom_histogram(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1)
scores
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,1))
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,1))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar() +
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,1))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar() +
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar()
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,0.5))
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,0.5))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1, color = 'cyan') +
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,0.5))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1, fill = 'cyan') +
scale_x_continuous(limits = c(1,10), breaks = seq(1,10,0.5))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1, fill = 'cyan') +
scale_x_continuous(limits = c(1,10), breaks = seq(0,10,1))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1, fill = 'cyan') +
scale_x_continuous(limits = c(1,10), breaks = seq(0,11,1))
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_histogram(binwidth = 1, fill = 'cyan') +
scale_x_continuous(limits = c(0,11), breaks = seq(0,11,1))
scores
?geom_histogram
scores <- ggplot(data = completed.df, aes(x = scores,)) +
geom_bar()
scores
scores <- ggplot(data = completed.df, aes(x = scores,)) +
geom_bar(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = scores,)) +
geom_bar(width = 0.9)
scores
scores <- ggplot(data = completed.df, aes(x = scores,)) +
geom_bar(binwidth = 0.9)
scores
scores <- ggplot(data = completed.df, aes(x = scores,)) +
geom_bar(binwidth = 0.8)
scores
?geom_bar
scores <- ggplot(data = completed.df, aes(x = scores,)) +
geom_bar(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar(binwidth = 1) +
scale_x_
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar(binwidth = 1) +
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = scores)) +
geom_bar(stat = 'bin', binwidth = 1)
scores
?geom_bar
scores <- ggplot(data = completed.df, aes(x = factor(scores)) +
geom_bar(binwidth = 1) +
scores <- ggplot(data = completed.df, aes(x = factor(scores)) +
geom_bar(binwidth = 1)
scores
scores <- ggplot(data = completed.df, aes(x = factor(scores)) +
geom_bar()
scores
scores <- ggplot(data = completed.df, aes(x = factor(scores)) +
geom_bar()
scores
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar()
scores
?geom_bar
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan')
scores
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan4')
scores
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan3')
scores
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan2')
scores
df <- xmlListToDataFrame('cosmicac_list.xml')
library('plyr')
library('XML')
library('ggplot2')
setwd('C:/Users/weird_000/mal')
extract.vectors <- function(anime.list) {
scores <- as.numeric(lapply(anime.list, function(x) x$my_score))
titles <- as.character(lapply(anime.list, function(x) x$series_title))
type <- as.character(lapply(anime.list, function(x) x$series_type))
epi.num <- as.numeric(lapply(anime.list, function(x) x$series_episodes))
status <- as.character(lapply(anime.list, function(x) x$my_status))
tags <- as.character(lapply(anime.list, function(x) x$my_tags))
return(list(scores, titles, type, epi.num, status, tags))
}
xmlListToDataFrame <- function(filename) {
xml <- xmlTreeParse(filename, options = NOCDATA)
list <- xmlToList(xml)
anime.list <- list[-1]
anime.df <- data.frame(extract.vectors(anime.list))
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
return(anime.df)
}
df <- xmlListToDataFrame('cosmicac_list.xml')
library('plyr')
library('XML')
library('ggplot2')
setwd('C:/Users/weird_000/mal')
extract.vectors <- function(anime.list) {
scores <- as.numeric(lapply(anime.list, function(x) x$my_score))
titles <- as.character(lapply(anime.list, function(x) x$series_title))
type <- as.character(lapply(anime.list, function(x) x$series_type))
epi.num <- as.numeric(lapply(anime.list, function(x) x$series_episodes))
status <- as.character(lapply(anime.list, function(x) x$my_status))
tags <- as.character(lapply(anime.list, function(x) x$my_tags))
return(list(scores, titles, type, epi.num, status, tags))
}
xmlListToDataFrame <- function(filename) {
xml <- xmlTreeParse(filename, options = NOCDATA)
list <- xmlToList(xml)
anime.list <- list[-1]
anime.df <- data.frame(extract.vectors(anime.list))
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
return(anime.df)
}
createScoreGraph <- function(anime.df, color) {
completed.df <- anime.df[anime.df$status == 'Completed',]
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan2')
return(scores)
}
cosmicac.df <- xmlListToDataFrame('cosmicac_list.xml')
cosmic.scores <- createScoreGraph(df, 'cyan2')
cosmic.scores <- createScoreGraph(cosmicac.df, 'cyan2')
cosmic.scores
danjot.df <- xmlListToDataFrame('danjot_list.xml')
danjot.df <- xmlListToDataFrame('danjot_list.xml')
danjot.scores <- createScoreGraph(danjot.df, 'steelblue4')
danjot.scores
danjot.df <- xmlListToDataFrame('danjot_list.xml')
danjot.scores <- createScoreGraph(danjot.df, 'steelblue4')
danjot.scores
View(danjot.df)
createScoreGraph <- function(anime.df, color, status) {
completed.df <- anime.df[anime.df$status == 'Completed',]
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan2')
return(scores)
}
cosmicac.df <- xmlListToDataFrame('cosmicac_list.xml')
cosmic.scores <- createScoreGraph(cosmicac.df, 'cyan2', 'Completed')
cosmic.scores
danjot.df <- xmlListToDataFrame('danjot_list.xml')
danjot.scores <- createScoreGraph(danjot.df, 'steelblue4', '2')
danjot.scores
traceback()
createScoreGraph <- function(anime.df, color, status) {
completed.df <- anime.df[anime.df$status == status,]
names(anime.df) <- c('scores', 'titles', 'type', 'epi.num', 'status', 'tags')
scores <- ggplot(data = completed.df, aes(x = factor(scores))) +
geom_bar(fill = 'cyan2')
return(scores)
}
cosmicac.df <- xmlListToDataFrame('cosmicac_list.xml')
cosmic.scores <- createScoreGraph(cosmicac.df, 'cyan2', 'Completed')
cosmic.scores
danjot.df <- xmlListToDataFrame('danjot_list.xml')
danjot.scores <- createScoreGraph(danjot.df, 'steelblue4', '2')
danjot.scores
cosmic.scores
danjot.scores
